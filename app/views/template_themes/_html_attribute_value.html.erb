<%
#local params:   html_attribute, param_value
  section_piece_param = param_value.section_param.section_piece_param
   ha = html_attribute
   #val= param_value.pvalue_for_haid(ha.id)
   pv_div_id = "pv_#{param_value.id}_#{ha.id}"
   pv_ele_id = "pv#{param_value.id}[#{ha.id}]"
   pv_link_id = pv_div_id+'_a'
   hav = HtmlAttributeValue.parse_from(param_value, ha)
   display = ( hav.hidden? ? "display:none" : ""  )
   Rails.logger.debug "hidden=#{display}" 
-%>
  <div id=<%=pv_div_id%> class="pv clear-block" style="<%=display%>">
      <div class="fl"> <span class="pv-name"><%=ha.slug%></span>
      </div>
      <div class="fl" style="<%= "display:none" if hav.unset?%>">

      <%ha.repeats.times{ |i|-%>
        <div class="clear-block">
        <% psvalue, pvalue,unit = hav["psvalue#{i}"],hav["pvalue#{i}"],hav["unit#{i}"]
           possible_values = ha.possible_selected_values(i)
           possible_values_descriptions = ha.possible_selected_values_descriptions(i)
           units = ha.units
onchange = my_remote_function( :submit=>"layout_editor_form",  
:url => { :action => "update_param_value",:editing_param_value_id=> param_value.id, :editing_html_attribute_id=>ha.id, :param_value_event=>ParamValue::EventEnum[:psv_changed]})
#logger.debug "ha=#{hav.html_attribute.id},hav.properties=#{hav.properties.inspect} psvalue=#{psvalue}, pvalue=#{pvalue}, unit=#{unit}"
        -%>
        <%# possible selected value
        -%>
          <div class="fl">
            <% if possible_values.size>1-%>
            <%= select(pv_ele_id,"psvalue#{i}", possible_values.each_index.collect{|j|  [possible_values_descriptions[j],possible_values[j]] },{:selected =>psvalue }, {:class=>"pv-psv", :onchange=>onchange}) %>
            <% else -%>
            <%= hidden_field_tag("#{pv_ele_id}[psvalue#{i}]", psvalue )%>
            <% end-%>
          </div>
          <% # user input value
            element_style = "display:none;"
            if ha.manual_entry?(psvalue)
              element_style="display:inline-block;"
            end
  onchange = my_remote_function( :submit=>"layout_editor_form",  
  :url => { :action => "update_param_value",:editing_param_value_id=> param_value.id, :editing_html_attribute_id=>ha.id, :param_value_event=>ParamValue::EventEnum[:pv_changed]})
          -%>
          <div class="fl" style="<%=element_style%>">
            <%if html_attribute.is_special?(:db)-%>
               <%=select("#{pv_ele_id}","pvalue#{i}", Menu.roots.collect{|menu| [menu.title, menu.id]}, {:selected=>pvalue ,:include_blank=>"Please select "},{ :onchange=>onchange}) %>
            <%elsif html_attribute.is_special?(:bool)-%>
              <%= radio_button_tag("#{pv_ele_id}[pvalue#{i}]", HtmlAttribute::BOOL_TRUE,pvalue==HtmlAttribute::BOOL_TRUE, :onchange=>onchange )%>Yes 
              <%= radio_button_tag("#{pv_ele_id}[pvalue#{i}]", HtmlAttribute::BOOL_FALSE,pvalue==HtmlAttribute::BOOL_FALSE, :onchange=>onchange )%>No
            <%elsif html_attribute.is_special?(:image) or html_attribute.is_special?(:src)-%>
               <% #selected_value = TemplateFile.find(:first, :conditions=>["file_name=?", pvalue]).id  unless pvalue.nil? or pvalue.empty?
               -%>
               <%=select("#{pv_ele_id}","pvalue#{i}", TemplateFile.all.collect{|item| [item.attachment_file_name, item.attachment_file_name]}, {:selected=>pvalue ,:include_blank=>"Please select "},{ :onchange=>onchange}) %>
               <%=link_to "upload file...",{:action=>"upload_file_dialog",:param_value_id=>param_value.id, :html_attribute_id=>html_attribute.id, :selected_editor_id=>@editor.id},:method =>:get,:remote=>true %>

            <%else-%>
              <%= text_field_tag("#{pv_ele_id}[pvalue#{i}]", pvalue, {:class=>"pv-pv",  :onchange=>onchange})%>
            <%end-%>
          </div>
          <div class="fl">  
        <% # user input value unit
           if units
        -%>
        <%= select(pv_ele_id,"unit#{i}", units.collect{|psv|  [psv, psv] },{:selected => unit}, {:class=>"pv-psv", :style=>element_style, :onchange=>onchange}) %>
        <% end -%>
          </div>
        </div>
      <%}-%>
      </div>
      <div class="fr">
<%onchange = my_remote_function( :submit=>"layout_editor_form",  
:url => { :action => "update_param_value",:editing_param_value_id=> param_value.id, :editing_html_attribute_id=>ha.id, :param_value_event=>ParamValue::EventEnum[:unset_changed]})
-%>
        <%=check_box_tag("#{pv_ele_id}[unset]", HtmlAttribute::UNSET_TRUE, hav.unset?, :onchange=>onchange)%> <%=label_tag "#{pv_ele_id}[unset]", "Unset"%>
      </div>
  </div>

